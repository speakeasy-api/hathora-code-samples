/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type SendVerificationEmailResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    verificationEmailResponse?: components.VerificationEmailResponse | undefined;
};

/** @internal */
export namespace SendVerificationEmailResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        VerificationEmailResponse?: components.VerificationEmailResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<SendVerificationEmailResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            VerificationEmailResponse:
                components.VerificationEmailResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.VerificationEmailResponse === undefined
                    ? null
                    : { verificationEmailResponse: v.VerificationEmailResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        VerificationEmailResponse?: components.VerificationEmailResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SendVerificationEmailResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                verificationEmailResponse:
                    components.VerificationEmailResponse$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.verificationEmailResponse === undefined
                        ? null
                        : { VerificationEmailResponse: v.verificationEmailResponse }),
                };
            });
}
