/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetConnectionInfoRequest = {
    roomId: string;
    appId?: string | undefined;
};

export type GetConnectionInfoResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    connectionInfoV2?: components.ConnectionInfoV2 | undefined;
};

/** @internal */
export namespace GetConnectionInfoRequest$ {
    export type Inbound = {
        roomId: string;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetConnectionInfoRequest, z.ZodTypeDef, Inbound> = z
        .object({
            roomId: z.string(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                roomId: v.roomId,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        roomId: string;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetConnectionInfoRequest> = z
        .object({
            roomId: z.string(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                roomId: v.roomId,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace GetConnectionInfoResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ConnectionInfoV2?: components.ConnectionInfoV2$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetConnectionInfoResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ConnectionInfoV2: components.ConnectionInfoV2$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ConnectionInfoV2 === undefined
                    ? null
                    : { connectionInfoV2: v.ConnectionInfoV2 }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ConnectionInfoV2?: components.ConnectionInfoV2$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetConnectionInfoResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            connectionInfoV2: components.ConnectionInfoV2$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.connectionInfoV2 === undefined
                    ? null
                    : { ConnectionInfoV2: v.connectionInfoV2 }),
            };
        });
}
