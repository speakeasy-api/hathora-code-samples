/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetDeploymentsRequest = {
    appId?: string | undefined;
};

export type GetDeploymentsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    deployments?: Array<components.Deployment> | undefined;
};

/** @internal */
export namespace GetDeploymentsRequest$ {
    export type Inbound = {
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetDeploymentsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetDeploymentsRequest> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace GetDeploymentsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Deployments?: Array<components.Deployment$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetDeploymentsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Deployments: z.array(components.Deployment$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Deployments === undefined ? null : { deployments: v.Deployments }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Deployments?: Array<components.Deployment$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetDeploymentsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            deployments: z.array(components.Deployment$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.deployments === undefined ? null : { Deployments: v.deployments }),
            };
        });
}
