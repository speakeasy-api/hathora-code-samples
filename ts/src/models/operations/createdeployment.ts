/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateDeploymentRequest = {
    buildId: number;
    deploymentConfig: components.DeploymentConfig;
    appId?: string | undefined;
};

export type CreateDeploymentResponse = {
    httpMeta: components.HTTPMetadata;
    deployment?: components.Deployment | undefined;
};

/** @internal */
export namespace CreateDeploymentRequest$ {
    export type Inbound = {
        buildId: number;
        DeploymentConfig: components.DeploymentConfig$.Inbound;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CreateDeploymentRequest, z.ZodTypeDef, Inbound> = z
        .object({
            buildId: z.number().int(),
            DeploymentConfig: components.DeploymentConfig$.inboundSchema,
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                buildId: v.buildId,
                deploymentConfig: v.DeploymentConfig,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        buildId: number;
        DeploymentConfig: components.DeploymentConfig$.Outbound;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateDeploymentRequest> = z
        .object({
            buildId: z.number().int(),
            deploymentConfig: components.DeploymentConfig$.outboundSchema,
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                buildId: v.buildId,
                DeploymentConfig: v.deploymentConfig,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace CreateDeploymentResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Deployment?: components.Deployment$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateDeploymentResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Deployment: components.Deployment$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Deployment === undefined ? null : { deployment: v.Deployment }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Deployment?: components.Deployment$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateDeploymentResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            deployment: components.Deployment$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.deployment === undefined ? null : { Deployment: v.deployment }),
            };
        });
}
