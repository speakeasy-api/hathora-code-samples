/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type LoginAnonymousRequest = {
    appId?: string | undefined;
};

export type LoginAnonymousResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    loginResponse?: components.LoginResponse | undefined;
};

/** @internal */
export namespace LoginAnonymousRequest$ {
    export type Inbound = {
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<LoginAnonymousRequest, z.ZodTypeDef, Inbound> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LoginAnonymousRequest> = z
        .object({
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace LoginAnonymousResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        LoginResponse?: components.LoginResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<LoginAnonymousResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            LoginResponse: components.LoginResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.LoginResponse === undefined ? null : { loginResponse: v.LoginResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        LoginResponse?: components.LoginResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LoginAnonymousResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            loginResponse: components.LoginResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.loginResponse === undefined ? null : { LoginResponse: v.loginResponse }),
            };
        });
}
