/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetAppsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    applicationWithLatestDeploymentAndBuilds?:
        | Array<components.ApplicationWithLatestDeploymentAndBuild>
        | undefined;
};

/** @internal */
export namespace GetAppsResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ApplicationWithLatestDeploymentAndBuilds?:
            | Array<components.ApplicationWithLatestDeploymentAndBuild$.Inbound>
            | undefined;
    };

    export const inboundSchema: z.ZodType<GetAppsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ApplicationWithLatestDeploymentAndBuilds: z
                .array(components.ApplicationWithLatestDeploymentAndBuild$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ApplicationWithLatestDeploymentAndBuilds === undefined
                    ? null
                    : {
                          applicationWithLatestDeploymentAndBuilds:
                              v.ApplicationWithLatestDeploymentAndBuilds,
                      }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ApplicationWithLatestDeploymentAndBuilds?:
            | Array<components.ApplicationWithLatestDeploymentAndBuild$.Outbound>
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAppsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            applicationWithLatestDeploymentAndBuilds: z
                .array(components.ApplicationWithLatestDeploymentAndBuild$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.applicationWithLatestDeploymentAndBuilds === undefined
                    ? null
                    : {
                          ApplicationWithLatestDeploymentAndBuilds:
                              v.applicationWithLatestDeploymentAndBuilds,
                      }),
            };
        });
}
