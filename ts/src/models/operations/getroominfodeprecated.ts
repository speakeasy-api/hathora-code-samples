/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetRoomInfoDeprecatedRequest = {
    roomId: string;
    appId?: string | undefined;
};

export type GetRoomInfoDeprecatedResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    room?: components.Room | undefined;
};

/** @internal */
export namespace GetRoomInfoDeprecatedRequest$ {
    export type Inbound = {
        roomId: string;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetRoomInfoDeprecatedRequest, z.ZodTypeDef, Inbound> = z
        .object({
            roomId: z.string(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                roomId: v.roomId,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        roomId: string;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRoomInfoDeprecatedRequest> = z
        .object({
            roomId: z.string(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                roomId: v.roomId,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace GetRoomInfoDeprecatedResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Room?: components.Room$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetRoomInfoDeprecatedResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Room: components.Room$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Room === undefined ? null : { room: v.Room }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Room?: components.Room$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRoomInfoDeprecatedResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                room: components.Room$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.room === undefined ? null : { Room: v.room }),
                };
            });
}
