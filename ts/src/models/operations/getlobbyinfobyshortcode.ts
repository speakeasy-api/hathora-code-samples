/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetLobbyInfoByShortCodeRequest = {
    shortCode: string;
    appId?: string | undefined;
};

export type GetLobbyInfoByShortCodeResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    lobbyV3?: components.LobbyV3 | undefined;
};

/** @internal */
export namespace GetLobbyInfoByShortCodeRequest$ {
    export type Inbound = {
        shortCode: string;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLobbyInfoByShortCodeRequest, z.ZodTypeDef, Inbound> = z
        .object({
            shortCode: z.string(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                shortCode: v.shortCode,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        shortCode: string;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLobbyInfoByShortCodeRequest> =
        z
            .object({
                shortCode: z.string(),
                appId: z.string().optional(),
            })
            .transform((v) => {
                return {
                    shortCode: v.shortCode,
                    ...(v.appId === undefined ? null : { appId: v.appId }),
                };
            });
}

/** @internal */
export namespace GetLobbyInfoByShortCodeResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        LobbyV3?: components.LobbyV3$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetLobbyInfoByShortCodeResponse, z.ZodTypeDef, Inbound> =
        z
            .object({
                HttpMeta: components.HTTPMetadata$.inboundSchema,
                LobbyV3: components.LobbyV3$.inboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    httpMeta: v.HttpMeta,
                    ...(v.LobbyV3 === undefined ? null : { lobbyV3: v.LobbyV3 }),
                };
            });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        LobbyV3?: components.LobbyV3$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetLobbyInfoByShortCodeResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            lobbyV3: components.LobbyV3$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.lobbyV3 === undefined ? null : { LobbyV3: v.lobbyV3 }),
            };
        });
}
