/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetLobbyInfoRequest = {
    roomId: string;
    appId?: string | undefined;
};

export type GetLobbyInfoResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Ok
     */
    lobby?: components.Lobby | undefined;
};

/** @internal */
export namespace GetLobbyInfoRequest$ {
    export type Inbound = {
        roomId: string;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetLobbyInfoRequest, z.ZodTypeDef, Inbound> = z
        .object({
            roomId: z.string(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                roomId: v.roomId,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        roomId: string;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLobbyInfoRequest> = z
        .object({
            roomId: z.string(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                roomId: v.roomId,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace GetLobbyInfoResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        Lobby?: components.Lobby$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetLobbyInfoResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Lobby: components.Lobby$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Lobby === undefined ? null : { lobby: v.Lobby }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Lobby?: components.Lobby$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetLobbyInfoResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            lobby: components.Lobby$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.lobby === undefined ? null : { Lobby: v.lobby }),
            };
        });
}
