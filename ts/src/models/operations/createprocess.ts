/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateProcessRequest = {
    region: components.Region;
    appId?: string | undefined;
};

export type CreateProcessResponse = {
    httpMeta: components.HTTPMetadata;
    processV2?: components.ProcessV2 | undefined;
};

/** @internal */
export namespace CreateProcessRequest$ {
    export type Inbound = {
        region: components.Region;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CreateProcessRequest, z.ZodTypeDef, Inbound> = z
        .object({
            region: components.Region$,
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                region: v.region,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        region: components.Region;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateProcessRequest> = z
        .object({
            region: components.Region$,
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                region: v.region,
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}

/** @internal */
export namespace CreateProcessResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        ProcessV2?: components.ProcessV2$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<CreateProcessResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            ProcessV2: components.ProcessV2$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.ProcessV2 === undefined ? null : { processV2: v.ProcessV2 }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        ProcessV2?: components.ProcessV2$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateProcessResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            processV2: components.ProcessV2$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.processV2 === undefined ? null : { ProcessV2: v.processV2 }),
            };
        });
}
